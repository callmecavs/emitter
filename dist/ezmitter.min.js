/*!
 * Ezmitter.js 0.0.1 - 
 * Copyright (c) 2015  - 
 * License: 
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.Ezmitter=e()}}(function(){return function e(t,n,r){function u(f,i){if(!n[f]){if(!t[f]){var d="function"==typeof require&&require;if(!i&&d)return d(f,!0);if(o)return o(f,!0);var s=new Error("Cannot find module '"+f+"'");throw s.code="MODULE_NOT_FOUND",s}var a=n[f]={exports:{}};t[f][0].call(a.exports,function(e){var n=t[f][1][e];return u(n?n:e)},a,a.exports,e,t,n,r)}return n[f].exports}for(var o="function"==typeof require&&require,f=0;f<r.length;f++)u(r[f]);return u}({1:[function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(n,"__esModule",{value:!0});var u=e("./spread"),o=r(u);n["default"]=function(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return e.events={},e.on=function(t,n){return e.events[t]=e.events[t]||[],e.events[t].push(n),e},e.off=function(t){return delete e.events[t],e},e.emit=function(t){var n=(0,o["default"])(arguments);return e.events[t].forEach(function(t){return t.apply(e,n)}),e},e},t.exports=n["default"]},{"./spread":2}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n["default"]=function(e){if(e.length>1){for(var t=[],n=1;n<e.length;n++)t.push(e[n]);return t}},t.exports=n["default"]},{}]},{},[1])(1)});