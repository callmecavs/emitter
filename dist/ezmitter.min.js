/*!
 * Ezmitter.js 0.0.1 - 
 * Copyright (c) 2015  - 
 * License: 
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.Ezmitter=e()}}(function(){return function e(n,t,r){function o(f,i){if(!t[f]){if(!n[f]){var s="function"==typeof require&&require;if(!i&&s)return s(f,!0);if(u)return u(f,!0);var d=new Error("Cannot find module '"+f+"'");throw d.code="MODULE_NOT_FOUND",d}var a=t[f]={exports:{}};n[f][0].call(a.exports,function(e){var t=n[f][1][e];return o(t?t:e)},a,a.exports,e,n,t,r)}return t[f].exports}for(var u="function"==typeof require&&require,f=0;f<r.length;f++)o(r[f]);return o}({1:[function(e,n,t){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var o=e("./spread"),u=r(o);t["default"]=function(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return e.events={},e.on=function(n,t){return e.events[n]=e.events[n]||[],e.events[n].push(t),e},e.once=function(n,t){return t._once=!0,e.on(n,t),e},e.off=function(n){return delete e.events[n],e},e.emit=function(n){var t=(0,u["default"])(arguments);return e.events[n].forEach(function(r){r._once&&e.events[n].splice(e.events[n].indexOf(r),1),r.apply(e,t)}),e},e},n.exports=t["default"]},{"./spread":2}],2:[function(e,n,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){if(e.length>1){for(var n=[],t=1;t<e.length;t++)n.push(e[t]);return n}},n.exports=t["default"]},{}]},{},[1])(1)});